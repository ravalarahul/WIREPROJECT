#BlueJ class context
comment0.target=EmployeeCard
comment0.text=\n\ EmployeeCard\ is\ a\ subclass\ which\ extends\ Card\ class.\n\ \n\ EmployeeCards\ are\ created\ with\ the\ highest\ luxury\ rating\ of\ 10\ (Employees\ can\n\ visit\ all\ islands)\ and\ no\ credits\n\ \n\ zero\ credits\ for\ a\ journey,\ but\ add\ 1\ to\ the\ journey\ score\ whenever\n\ a\ ferry\ journey\ is\ made\n\n\ @author\ Rahul\ Ravala\ -\ Student\ Id\ \:\ 21089189\n\ @version\ 10/01/2023\n
comment1.params=cardId\ name\ Description
comment1.target=EmployeeCard(int,\ java.lang.String,\ java.lang.String)
comment1.text=\n\ constructor\ class\ to\ create\ a\ new\ EmployeeCard\ Instance\ with\ fields\ like\n\ Name,\ LuxuryRating,\ Credits,\ Description.\n\ \n\ EmployeeCard\ comes\ with\ 0\ credits\ and\ 10\ luxuryRating\n
comment2.params=
comment2.target=java.lang.String\ getDescription()
comment2.text=\n\ Returns\ information\ about\ the\ Employee\ Description\ present\ on\ a\ card.\n\ \n\ @return\ Employee\ Description\ on\ a\ Card\n
comment3.params=Description
comment3.target=void\ setDescription(java.lang.String)
comment3.text=\n\ Method\ to\ set\ description\ of\ the\ card\n\ \n\ @param\ takes\ String\ input\ and\ set\ the\ Description\ of\ the\ card\n
comment4.params=
comment4.target=int\ getJourneyScore()
comment4.text=\n\ Returns\ information\ about\ the\ Employee\ Journey\ Points\ present\ on\ a\ card.\n\ \n\ @return\ Employee\ JourneyPoints\ on\ a\ Card\n
comment5.params=journeyScore
comment5.target=void\ setJourneyScore(int)
comment5.text=\n\ Method\ to\ set\ description\ of\ the\ card\n\ \n\ @param\ takes\ integer\ input\ and\ set\ the\ Journey\ Score\ of\ the\ card\n
comment6.params=
comment6.target=boolean\ canTravel()
comment6.text=\n\ Method\ to\ check\ if\ a\ card\ meets\ all\ conditions\ required\ to\ travel\ on\ a\ ferry\n\ \n\ This\ method\ overrides\ the\ original\ Card\ class\ method\n\n\ @return\ boolean\ value\ if\ a\ card\ can\ travel\ on\ a\ ferry\n
comment7.params=
comment7.target=void\ travel()
comment7.text=\n\ Method\ to\ make\ changes\ to\ the\ card\ parameters\ when\ a\ travel\ is\ made\ from\ one\n\ island\ to\ another\ island.\ These\ changes\ include\ deduction\ of\ specified\n\ credits\ from\ a\ card\ and\ also\ add\ loyalty\ points\ to\ the\ card\ .\n\ This\ method\ overrides\ the\ original\ Card\ class\ method.\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Method\ to\ return\ all\ the\ necessary\ details\ of\ the\ card\ including\ CardId,\n\ Name,\ LuxuryRating,\ Credits,\ Type.\n\ This\ method\ overrides\ the\ original\ 'toString'\ method\n\ \n\ @return\ all\ details\ of\ the\ card\ including\ CardId,\ Name,\ LuxuryRating,Journey\n\ \ \ \ \ \ \ \ \ Score,\ Credits,\ Type\ and\ Description.\n
numComments=9
